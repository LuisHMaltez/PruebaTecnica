{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luis\\\\Desktop\\\\pruebatecnica\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// Login.js\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = () => {\n    // Lógica de inicio de sesión (aquí deberías verificar contra la API)\n    // Por ahora, simplemente comprobamos si el nombre de usuario es \"usuario\" y la contraseña es \"contrasena\"\n    if (username === 'usuario' && password === 'contrasena') {\n      // Iniciar sesión exitosa, redirigir a la página del catálogo\n      history.push('/catalogo');\n    } else {\n      // Mostrar mensaje de error o realizar otras acciones en caso de inicio de sesión fallido\n      alert('Datos inválidos');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Usuario:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Contrase\\xF1a:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Iniciar Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"H4gXrCoHLhiMVNICxu+h4zBHttg=\", false, function () {\n  return [useHistory];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useHistory","jsxDEV","_jsxDEV","Login","_s","history","username","setUsername","password","setPassword","handleLogin","push","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Luis/Desktop/pruebatecnica/src/components/Login.js"],"sourcesContent":["// Login.js\r\n\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = () => {\r\n    // Lógica de inicio de sesión (aquí deberías verificar contra la API)\r\n    // Por ahora, simplemente comprobamos si el nombre de usuario es \"usuario\" y la contraseña es \"contrasena\"\r\n    if (username === 'usuario' && password === 'contrasena') {\r\n      // Iniciar sesión exitosa, redirigir a la página del catálogo\r\n      history.push('/catalogo');\r\n    } else {\r\n      // Mostrar mensaje de error o realizar otras acciones en caso de inicio de sesión fallido\r\n      alert('Datos inválidos');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      <label>\r\n        Usuario:\r\n        <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Contraseña:\r\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      </label>\r\n      <br />\r\n      <button onClick={handleLogin}>Iniciar Sesión</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,OAAO,GAAGL,UAAU,CAAC,CAAC;EAC5B,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA;IACA,IAAIJ,QAAQ,KAAK,SAAS,IAAIE,QAAQ,KAAK,YAAY,EAAE;MACvD;MACAH,OAAO,CAACM,IAAI,CAAC,WAAW,CAAC;IAC3B,CAAC,MAAM;MACL;MACAC,KAAK,CAAC,iBAAiB,CAAC;IAC1B;EACF,CAAC;EAED,oBACEV,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdf,OAAA;MAAAW,QAAA,GAAO,UAEL,eAAAX,OAAA;QAAOgB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEb,QAAS;QAACc,QAAQ,EAAGC,CAAC,IAAKd,WAAW,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/E,CAAC,eACRf,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNf,OAAA;MAAAW,QAAA,GAAO,gBAEL,eAAAX,OAAA;QAAOgB,IAAI,EAAC,UAAU;QAACC,KAAK,EAAEX,QAAS;QAACY,QAAQ,EAAGC,CAAC,IAAKZ,WAAW,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC,eACRf,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNf,OAAA;MAAQqB,OAAO,EAAEb,WAAY;MAAAG,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAACb,EAAA,CAjCID,KAAK;EAAA,QACOH,UAAU;AAAA;AAAAwB,EAAA,GADtBrB,KAAK;AAmCX,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}